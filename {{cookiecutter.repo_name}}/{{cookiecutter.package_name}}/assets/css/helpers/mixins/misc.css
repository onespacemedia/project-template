/*
|--------------------------------------------------------------------------
| Background spread
|--------------------------------------------------------------------------
| Mainly used when you're having to have an image cover a section or div
|
*/
@mixin Background_Spread() {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;

  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

/*
|--------------------------------------------------------------------------
| Intrinsic ratio
|--------------------------------------------------------------------------
| Used for surrounding images and videos to maintain their aspect ratio
|
*/
@mixin intrinsic($x: 16, $y: 9) {
  position: relative;

  display: block;
  width: 100%;

  /* stylelint-disable */
  > * {
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;
  }
  /* stylelint-enable */

  &::before {
    content: '';

    display: block;
    padding-bottom: calc(100% / ($x / $y));
  }
}

/* stylelint-disable */
/*
|--------------------------------------------------------------------------
| At least
|--------------------------------------------------------------------------
| If there are at least 'x' children
|
*/
@mixin AtLeast($count: 0) {
  &:first-child:nth-last-child($count),
  &:first-child:nth-last-child($count) ~ & {
    @content;
  }
}

/*
|--------------------------------------------------------------------------
| At most
|--------------------------------------------------------------------------
| If there are at most 'x' children
|
*/
@mixin AtMost($count: 0) {
  &:nth-last-child(-n+$count):first-child,
  &:nth-last-child(-n+$count):first-child ~ & {
    @content;
  }
}

/*
|--------------------------------------------------------------------------
| Exactly
|--------------------------------------------------------------------------
| If there are exactly 'x' children
|
*/
@mixin Exactly($count: 0) {
  &:nth-last-child($count):first-child,
  &:nth-last-child($count):first-child ~ & {
    @content;
  }
}

/*
|--------------------------------------------------------------------------
| Between
|--------------------------------------------------------------------------
| If there are between 'x' and 'x' children
|
*/
/* stylelint-disable */
@mixin Between($Start: 0, $End: 0) {
  &:nth-last-child(n+$Start):nth-last-child(-n+$End):first-child,
  &:nth-last-child(n+$Start):nth-last-child(-n+$End):first-child ~ & {
    @content;
  }
}
/* stylelint-enable */
