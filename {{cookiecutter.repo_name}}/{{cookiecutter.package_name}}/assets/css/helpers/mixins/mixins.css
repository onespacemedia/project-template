/*
|--------------------------------------------------------------------------
| Buttons
|--------------------------------------------------------------------------
|
*/
@mixin Button-base {
  @include Font_14;

  display: inline-block;
  padding: 0.25vr var(--Grid_Gutter);

  background-color: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  color: #fff;

  transition: background-color var(--Global_Transition),
    border var(--Global_Transition),
    color var(--Global_Transition);
}

@mixin Button {
  @include Button-base;

  background-color: var(--Color_Brand);
  color: #fff;
}

/*
|--------------------------------------------------------------------------
| Clearfix
|--------------------------------------------------------------------------
|
*/
@mixin Clearfix {
  &::after {
    content: '';

    display: block;
    clear: both;
  }
}

/*
|--------------------------------------------------------------------------
| Grid
|--------------------------------------------------------------------------
|
*/
@mixin Grid_Container {
  max-width: calc(var(--Grid_Container) + (var(--Grid_Gutter) * 2));
  width: 100%;
  margin-right: auto;
  margin-left: @margin-right;
  padding-right: var(--Grid_Gutter);
  padding-left: @padding-right;

  @media (--xs) {
    max-width: calc(var(--Grid_Container) + (var(--Grid_Gutter) * 4));
    padding-right: calc(var(--Grid_Gutter) * 2);
    padding-left: @padding-right;
  }

  @media (--md) {
    max-width: calc(var(--Grid_Container) + (var(--Grid_Gutter) * 6));
    padding-right: calc(var(--Grid_Gutter) * 3);
    padding-left: @padding-right;
  }
}

@mixin Grid_Container-grid {
  grid-column-gap: var(--Grid_Gutter);
  grid-template-columns: 1fr var(--Grid_Container) 1fr;

  display: grid;

  @media (--sm) {
    grid-column-gap: calc(var(--Grid_Gutter) * 2);
  }

  @media (--md) {
    grid-column-gap: calc(var(--Grid_Gutter) * 3);
  }
}

@mixin Grid_Row {
  flex-wrap: wrap;

  display: flex;
  margin-right: -var(--Grid_Gutter);
  margin-left: @margin-right;
}

@mixin Grid_Column {
  margin-right: var(--Grid_Gutter);
  margin-left: @margin-right;
}

/*
|--------------------------------------------------------------------------
| Intrinsic
|--------------------------------------------------------------------------
|
*/
@mixin Intrinsic($x: 16, $y: 9) {
  position: relative;
  z-index: 1;

  display: block;
  width: 100%;

  /* Disabling no-asterisk selector because this needs to work with any
  element. */
  /* stylelint-disable */
  > * {
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;
  }
  /* stylelint-enable */

  &::before {
    content: '';

    display: block;
    padding-bottom: calc(100% / ($x / $y));
  }
}

/*
|--------------------------------------------------------------------------
| Spread
|--------------------------------------------------------------------------
| Forces an element to the full width and height of its nearest positioned
| ascendent.
|
*/
@mixin Spread {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

/*
|--------------------------------------------------------------------------
| Screen reader
|--------------------------------------------------------------------------
|
*/
@mixin HideForAllButScreenReader {
  position: absolute;

  width: 1px;
  height: 1px;

  clip: rect(1px, 1px, 1px, 1px);

  overflow: hidden;
}

/*
|--------------------------------------------------------------------------
| Card box shadow and hover effect
|--------------------------------------------------------------------------
| 'Borrowed' from Muzli's cards
|
*/
@mixin CardShadowAndHover {
  box-shadow: 0 2px 11px 0 rgba(#000, 0.06);

  transition: box-shadow 0.3s ease-out, transform 0.3s ease-out;

  @media (hover: hover) {
    &:not(.crd-Card-noHover):hover {
      box-shadow: rgba(#000, 0.05) 0 4px 4px, rgba(#000, 0.05) 0 8px 8px,
        rgba(#000, 0.05) 0 16px 16px, rgba(#000, 0.05) 0 32px 32px,
        rgba(#000, 0.05) 0 64px 64px;

      transform: translate(0, -4px);
    }
  }
}
